apiVersion: apps/v1
kind: Deployment
metadata:
  name: springapp
  namespace: test-ns
spec:
  replicas: 1
  selector:
    matchLabels:
      app: springapp
  template:
    metadata:
      labels:
        app: springapp
    spec:
      containers:
      - name: springappcontainer
        image: chandandockerproject/spring-boot-mongo-app:VERSION
#         resources:
#           requests:
#             memory: "256Mi"
#             cpu: 100m
#           limits:
#             memory: "512Mi"
#             cpu: "250m"
        ports:
        - containerPort: 8080
        env:
        - name: MONGO_DB_HOSTNAME
          value: mongo-svc  # this is the service name for the mongodb. App code uses this service name to connect to database by also using selector and labels from service to replicaset of mongo db. 
        - name: MONGO_DB_USERNAME
          value: devdb
        - name: MONGO_DB_PASSWORD
          value: devdb@123
        volumeMounts:
        - name: mongodb-vol #this name should match the name in volumes
          mountPath: /data/db #default storage location of mongodb. we mount this location with volume-> /tmp/mongo
      volumes:
      - name: mongodb-vol #this name should match the name in  volumeMounts
        hostPath: 
          path: "/home/ubuntu/mongodir/"


---
apiVersion: v1
kind: Service
metadata:
  name: springapp
  namespace: test-ns
spec:
  type: NodePort
  selector:
    app: springapp
  ports:
  - port: 80
    targetPort: 8080
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: mongo-rs
  namespace: test-ns
spec:
  selector:
    matchLabels:
      app: mongo
  template:
    metadata:
      labels:
        app: mongo
    spec:
      containers:
      - name: mongodbcontainer
        image: mongo
        ports:
        - containerPort: 27017
        env: 
        - name: MONGO_INITDB_ROOT_USERNAME
          value: devdb
        - name: MONGO_INITDB_ROOT_PASSWORD
          value: devdb@123
---
apiVersion: v1
kind: Service
metadata:
  name: mongo-svc # give this service name in springapp deployment-> under spec.container.env.value in hostname section to give connection btwn database and application code (mongo and springapp).
  namespace: test-ns
spec:
  selector:
    app: mongo
  ports:
  - port: 27017
    targetPort: 27017

